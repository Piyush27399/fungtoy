/* sass variables */

$font-stack: 'Droid Sans', Helvetica, sans-serif;
$header-font-stack: 'Codystar', Helvetica, sans-serif;

$radius: 10px;

$gray: #d0caca;		//rgb(208,202,202)
$lavender: #9885c7;	//rgb(152,133,199)
$seafoam: #a8d3a6;	//rgb(152,181,127)
$moss: #98b57f;		//rgb(168,211,166)
$dark-green: #66a266;
$title-green: #477547;
$purple: #6c51af;
$gray-shadow: #888;

$green-border: rgba(168,211,166,0.7);
$white-translucent: rgba(252,252,252,0.85);
$white-translucenter: rgba(252,252,252,0.8);

@mixin inset-box-shadow($color) {
	-moz-box-shadow: 0 0 5px $color;
	-webkit-box-shadow: 0 0 5px $color;
	box-shadow: inset 0 0 5px $color;
}

// Since the typical default browser font-size is 16px, that makes the calculation for grid size.
// If you want your base font-size to be a different size and not have it effect grid size too,
// set the value of $rem-base to $base-font-size ($rem-base: $base-font-size;)
$rem-base: 16px !default;

// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// New Syntax, allows to optionally calculate on a different base value to counter compounding effect of em\'s.
// Call with 1, 2, 3 or 4 parameters, \'px\' is not required but supported
// rem-calc(10 20 30px 40);
// Space delimited, if you want to delimit using comma\'s, wrap it in another pair of brackets
// rem-calc((10, 20, 30, 40px));
// Optionally call with a different base (eg: 8px) to calculate em.
// rem-calc(16px 32px 48px, 8px);
// If you require to comma separate your list
// rem-calc((16px, 32px, 48), 8px);

@function convert-to-rem($value, $base-value: $rem-base)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1em;
  @if ($value == 0em) { $value: 0; } // Turn 0em into 0
  @return $value;
}

@function rem-calc($values, $base-value: $rem-base) {
  $max: length($values);

  @if $max == 1 { @return convert-to-rem(nth($values, 1), $base-value); }

  $remValues: ();
  @for $i from 1 through $max {
    $remValues: append($remValues, convert-to-rem(nth($values, $i), $base-value));
  }
  @return $remValues;
}

// Support for the old syntax

@function emCalc($values){
  @return rem-calc($values);
}

// Maybe you want to create rems with pixels
// $rem-base: 0.625 !default; //Set the value corresponding to body font size. In this case, you should set as: body {font-size: 62.5%;}
// @function remCalc($pxWidth) {
//   @return $pxWidth / $rem-base * 1rem;
// }